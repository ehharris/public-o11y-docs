.. _synth-key-concepts:

********************************************************
Key concepts in Splunk Synthetic Monitoring
********************************************************

.. meta::
  :description: Definitions for key concepts in Splunk Synthetic Monitoring, such as synthetics, tests, metrics, and other terms.
  
These key concepts help you get the most out of your experience with Splunk Synthetic Monitoring.

.. list-table::
   :header-rows: 1
   :widths: 25, 75

   * - :strong:`Concept`
     - :strong:`Description`
   
   * - Synthetic Monitoring
     - A monitoring technique to test site or application performance by generating simulated user behavior from a variety of geographic locations, devices, and connection types and by measuring response times and other performance metrics. This level of monitoring lets you proactively measure how your webpages are performing without needing to rely on data generated by real users, so that you can identify and fix problems before they affect user experience or application revenue. 

   * - Synthetics
     - A common abbreviation for Synthetic Monitoring.

   * - Test
     - An ordered sequence of actions or operations to perform on a target URL or endpoint, similar to a script. A test is the primary mechanism for monitoring applications in Splunk Synthetic Monitoring. You can set up browser, uptime, and API tests to run at your preferred frequency from the devices and locations of your choosing. 

   * - Run
     - An instance of a test invocation from a specific device and location and at a specific time. 

   * - Metric
     - A numeric indicator of a performance factor. Each run of a test captures metrics and diagnostics that provide insight into your application's performance. See the following links for details on the metrics available captured by each test type:
       | 
       | - :ref:`browser-metrics` 
       | - :ref:`uptime-metrics`
       | - :ref:`api-test-metrics`
       | 
     
   * - Browser test
     - A synthetic test that simulates and analyzes the user experience of loading a page or performing a workflow on a site or application. 

   * - Uptime test
     - A synthetic test that monitors the response times and response codes of HTTP requests and server ports. 
       
   * - API test
     - A synthetic test that monitors the functionality and performance of API endpoints. 

   * - Waterfall chart
     - A visualization that represents the performance of resources on a webpage in a browser test.
     
   * - Device
     - A predefined combination of a specific viewport size and network connection. For more information about devices, viewports, and network connections, see :ref:`devices`.

   * - Public location
     - A public IP address from which you can run synthetic tests to simulate performance for users in that location. See :ref:`public-locations`.

   * - Private location
     - A name you create in Splunk Synthetic Monitoring to represent a custom location from which you can run synthetic tests.  The name you give to a private location allows you to specify that name in a synthetic test's :guilabel:`Locations` field. You must also set up one or more private runners within every private location to do the actual communication with your targets and with Splunk Synthetic Monitoring. You can use a private location to test an internal endpoint or to test a public endpoint from a location that isn't included in :ref:`the list of Splunk Synthetic Monitoring public locations <public-locations>`.  See :ref:`private-locations`.

   * - Private runner
     - A private runner queries Splunk Synthetic Monitoring for tests configured to run in its inherent private location, performs the test's steps on your private target, and reports the results back to Splunk Synthetic Monitoring. Because a private runner must have access to your private target, it is a Docker image which you deploy on your own infrastructure, within your own internal network. See :ref:`private-locations`. 



Learn more
===========
To learn more about Splunk Synthetic Monitoring, see the following topics:

* :ref:`intro-synthetics`
* :ref:`set-up-synthetics`
